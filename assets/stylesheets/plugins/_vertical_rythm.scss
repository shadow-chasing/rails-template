$bp-sizes: (
  default: (
  	base-font-size: 14px,
  	base-line-height: 1.3,
  	scale: 1.2
  ),
  small: (
    base-font-size: 16px,
    base-line-height: 1.3,
    scale: 1.25
  ),
  medium: (
    base-font-size: 18px,
    base-line-height: 1.4,
    scale: 1.4
  ),
  large: (
    base-font-size: 22px,
    base-line-height: 1.5,
    scale: 1.5
  )
);

$breakpoints: (
  default: '',
  small: 480px,
  medium: 720px,
  large: 960px
);

$font-sizes: ( p, bq, ssh, sh, h, hero );

// ----
// Sass (v3.3.14)
// Compass (v1.0.0.rc.1)
// ----

@function pow($x, $y) {
  $ret: 1;

  @if $y > 0 {
    @for $i from 1 through $y {
        $ret: $ret * $x;
    }
  }

  @else {
    @for $i from $y to 0 {
        $ret: $ret / $x;
    }
  }

  @return $ret;
}


@mixin breakpoint($name) {
  @if not map-has-key($breakpoints, $name) {
    @warn "Invalid breakpoint `#{$name}`.";
  } @else {
    @if map-get($breakpoints, $name) == '' {
      @content;
    } @else {
      @media (min-width: map-get($breakpoints, $name)) {
        @content;
      }
    }
  }
}

@function get-breakpoint-property($prop, $bp) {
  @return map-get(map-get($bp-sizes, $bp), $prop);
}

@mixin generate-font-properties($label, $scale, $base-font-size, $base-line-height) {
  $scale-value: index($font-sizes, $label) - 1;

  $fs: pow($scale, $scale-value) * $base-font-size;
	$lh: $base-font-size * $base-line-height / $fs;

	@while $lh < 1 {
	  $lh: $lh + $lh;
	}

  font-size: $fs;
  line-height: $lh;
}

@each $size, $data in $bp-sizes {

  $bsf: get-breakpoint-property(base-font-size, $size);
  $blh: get-breakpoint-property(base-line-height, $size);
  $s: get-breakpoint-property(scale, $size);

  @include breakpoint($size) {
    @each $label in $font-sizes {
      %#{$label} {
        @include generate-font-properties($label, $s, $bsf, $blh);
      }
    }
  }
}
